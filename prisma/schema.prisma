generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  username   String   @db.VarChar
  email      String   @unique @db.VarChar
  avatar     String   @db.VarChar(255)
  bio        String?
  is_active  Boolean  @default(true)
  auther     rooms?   @relation("auther")
  roomsId    BigInt?
  room       rooms?   @relation("rooms_users", fields: [roomsId], references: [id])
  role       Role     @default(USER)
  tracks     tracks[]
}

model rooms {
  id         BigInt    @id @default(autoincrement())
  unique_id  String    @unique @default(cuid())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  name       String    @db.VarChar
  author_id  BigInt    @unique
  author     users     @relation("auther", fields: [author_id], references: [id])
  users      users[]   @relation("rooms_users")
  playList   playList?
}

model playList {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  room_id     BigInt   @unique
  room        rooms    @relation(fields: [room_id], references: [id], onDelete: Cascade)
  current     Int      @default(0)
  now_playing String   @default("none")
  is_playing  Boolean  @default(false)
  tracks      tracks[] @relation("playLit")
}

model tracks {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  playList_id BigInt   @unique
  playList    playList @relation("playLit", fields: [playList_id], references: [id], onDelete: Cascade)
  title       String
  added_by    users    @relation(fields: [added_by_id], references: [id], onDelete: Cascade)
  added_by_id BigInt   @unique
  position    Int      @default(0)
  url         String
  playing     Boolean  @default(false)
}

enum Role {
  USER
  ADMIN
}
